# Generated by Django 5.1 on 2024-09-30 17:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('matricula', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('serie', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiagnoseAlunoMatematica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_usuario', models.CharField(choices=[('aluno', 'Aluno'), ('professor', 'Professor')], max_length=20)),
                ('serie', models.CharField(choices=[('3º', '3º Ano'), ('4º', '4º Ano'), ('5º', '5º Ano'), ('6º', '6º Ano')], max_length=10)),
                ('habilidade', models.CharField(max_length=100)),
                ('descricao_habilidade', models.TextField(blank=True, null=True)),
                ('acerto', models.FloatField()),
                ('erro', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='DiagnoseAlunoPortugues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_usuario', models.CharField(choices=[('aluno', 'Aluno'), ('professor', 'Professor')], max_length=20)),
                ('serie', models.CharField(choices=[('3º', '3º Ano'), ('4º', '4º Ano'), ('5º', '5º Ano'), ('6º', '6º Ano')], max_length=10)),
                ('habilidade', models.CharField(max_length=100)),
                ('descricao_habilidade', models.TextField(blank=True, null=True)),
                ('acerto', models.FloatField()),
                ('erro', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='DiagnoseAnosFinaisProfMat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=50)),
                ('habilidade', models.CharField(max_length=255)),
                ('descricao_habilidade', models.TextField(blank=True, null=True)),
                ('professor_200', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_201', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_202', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_203', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_205', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_206', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_207', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_208', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_209', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_210', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_211', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_212', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_213', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_215', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_216', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_217', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_218', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_220', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_222', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_224', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_226', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_227', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_229', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_231', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_232', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_233', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_234', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_235', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_236', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_238', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_240', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_241', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
                ('professor_243', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], default='N', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='DiagnoseAnosFinaisProfPort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=50)),
                ('habilidade', models.CharField(max_length=255)),
                ('descricao_habilidade', models.TextField(blank=True, null=True)),
                ('professor_101', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_102', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_103', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_104', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_105', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_106', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_107', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_109', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_110', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_112', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_114', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_117', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_119', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_120', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_121', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_124', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_126', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_128', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_129', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_130', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_131', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_134', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_135', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_137', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_138', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_139', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_140', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_142', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_143', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_144', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_145', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_146', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_147', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
                ('professor_171', models.CharField(choices=[('0', 'Erro'), ('1', 'Acerto'), ('Branco', 'Branco')], default='Branco', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='DiagnoseInicProfPort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=50)),
                ('habilidade', models.CharField(max_length=255)),
                ('descricao_habilidade', models.TextField(blank=True, null=True)),
                ('professor_401', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_403', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_404', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_406', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_408', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_409', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_410', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_413', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_414', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_415', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_417', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_421', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_423', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_426', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_428', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_429', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_430', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_431', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_432', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_433', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_434', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_435', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_436', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_437', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_438', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_439', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_441', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_442', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_447', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_451', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_471', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='DiagnoseMatematicaProf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=50)),
                ('habilidade', models.CharField(max_length=255)),
                ('professor_300', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_301', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_302', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_305', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_306', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_308', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_310', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_317', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_318', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_319', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_320', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_323', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_324', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_328', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_329', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_330', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_331', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_333', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_338', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_339', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_341', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_342', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_343', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_344', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_345', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_346', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_347', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_348', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_350', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_351', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_352', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_353', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_354', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('descricao_habilidade', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Habilidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('habilidade', models.CharField(max_length=10)),
                ('nome_habilidade', models.CharField(max_length=255)),
                ('seguimento', models.CharField(max_length=50)),
                ('disciplina', models.CharField(max_length=50)),
                ('descricao_habilidade', models.TextField(blank=True, null=True)),
                ('prof_401', models.IntegerField()),
                ('prof_403', models.IntegerField()),
                ('prof_404', models.IntegerField()),
                ('prof_406', models.IntegerField()),
                ('prof_408', models.IntegerField()),
                ('prof_409', models.IntegerField()),
                ('prof_410', models.IntegerField()),
                ('prof_413', models.IntegerField()),
                ('prof_414', models.IntegerField()),
                ('prof_415', models.IntegerField()),
                ('prof_417', models.IntegerField()),
                ('prof_421', models.IntegerField()),
                ('prof_423', models.IntegerField()),
                ('prof_426', models.IntegerField()),
                ('prof_428', models.IntegerField()),
                ('prof_429', models.IntegerField()),
                ('prof_430', models.IntegerField()),
                ('prof_431', models.IntegerField()),
                ('prof_432', models.IntegerField()),
                ('prof_433', models.IntegerField()),
                ('prof_434', models.IntegerField()),
                ('prof_435', models.IntegerField()),
                ('prof_436', models.IntegerField()),
                ('prof_437', models.IntegerField()),
                ('prof_438', models.IntegerField()),
                ('prof_439', models.IntegerField()),
                ('prof_441', models.IntegerField()),
                ('prof_442', models.IntegerField()),
                ('prof_447', models.IntegerField()),
                ('prof_451', models.IntegerField()),
                ('prof_471', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='HabilidadeMatematica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('habilidade', models.CharField(max_length=100)),
                ('topico', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
                ('serie', models.IntegerField()),
                ('tipo_ano', models.CharField(choices=[('inicial', 'Anos Iniciais'), ('final', 'Anos Finais')], default='inicial', max_length=10)),
                ('acertos', models.FloatField(default=0.0)),
                ('erros', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='HabilidadePortugues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('habilidade', models.CharField(max_length=100)),
                ('topico', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
                ('serie', models.IntegerField()),
                ('tipo_ano', models.CharField(choices=[('inicial', 'Anos Iniciais'), ('final', 'Anos Finais')], default='inicial', max_length=10)),
                ('acertos', models.FloatField(default=0.0)),
                ('erros', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('cpf', models.CharField(max_length=11, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('especialidade', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, unique=True)),
                ('user_type', models.CharField(choices=[('admin', 'Administrador'), ('gabinete', 'Gabinete'), ('dide', 'Dide'), ('diagnose', 'Diágnosis')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
